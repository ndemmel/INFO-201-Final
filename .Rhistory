map <- plot_geo(midwest_data, locationmode = "USA-states") %>%
add_trace(
z = midwest_data[, map.var], text = ~state, locations = ~code,
color = midwest_data[, map.var], colors = "Blues"
) %>%
colorbar(title = "Color") %>%
layout(
geo = projection
)
library(dplyr)
library(ggplot2)
library(stringr)
midwest_data <- data.frame(midwest)
map <- plot_geo(midwest_data, locationmode = "USA-states") %>%
add_trace(
z = midwest_data[, map.var], text = ~state, locations = ~code,
color = midwest_data[, map.var], colors = "Blues"
)
library(ggplot2)
library(plotly)
map <- plot_geo(midwest_data, locationmode = "USA-states") %>%
add_trace(
z = midwest_data[, map.var], text = ~state, locations = ~code,
color = midwest_data[, map.var], colors = "Blues"
) %>%
colorbar(title = "Color") %>%
layout(
geo = projection
)
geo_map <- function(midwest_data, map.var) {
border <- list(color = toRGB("black"), width = 3)
projection <- list(
scope = "usa",
projection = list(type = "albers usa"),
showlakes = FALSE
)
map <- plot_geo(midwest_data, locationmode = "USA-states") %>%
add_trace(
z = midwest_data[, map.var], text = ~state, locations = ~code,
color = midwest_data[, map.var], colors = "Blues"
) %>%
colorbar(title = "Color") %>%
layout(
geo = projection
)
return(map)
}
map <- plot_geo(midwest_data, locationmode = "USA-states") %>%
add_trace(
z = midwest_data[, mapvar], text = ~state, locations = ~code,
color = midwest_data[, mapvar], colors = "Blues"
) %>%
geo_map <- function(midwest_data, mapvar) {
border <- list(color = toRGB("black"), width = 3)
projection <- list(
scope = "usa",
projection = list(type = "albers usa"),
showlakes = FALSE
)
map <- plot_geo(midwest_data, locationmode = "USA-states") %>%
add_trace(
z = midwest_data[, mapvar], text = ~state, locations = ~code,
color = midwest_data[, mapvar], colors = "Blues"
) %>%
colorbar(title = "Color") %>%
layout(
geo = projection
)
return(map)
}
shiny::runApp('Desktop/INFO/a8-shiny-ndemmel')
geo_map <- function(midwest_data, map.var) {
border <- list(color = toRGB("black"), width = 3)
projection <- list(
scope = "usa",
projection = list(type = "albers usa"),
showlakes = FALSE
)
map <- plot_geo(midwest_data, locationmode = "USA-states") %>%
add_trace(
z = midwest_data[, map.var], text = ~state, locations = ~code,
color = midwest_data[, map.var], colors = "Blues"
) %>%
colorbar(title = "Color") %>%
layout(
geo = projection
)
geo_map <- function(midwest_data, map.var) {
border <- list(color = toRGB("black"), width = 3)
projection <- list(
scope = "usa",
projection = list(type = "albers usa"),
showlakes = FALSE
)
map <- plot_geo(midwest_data, locationmode = "USA-states") %>%
add_trace(
z = midwest_data[, map.var], text = ~state, locations = ~code,
color = midwest_data[, map.var], colors = "Blues"
) %>%
colorbar(title = "Color") %>%
layout(
geo = projection
)
return(map)
}
map <- plot_geo(midwest_data, locationmode = "USA-states") %>%
add_trace(
z = midwest_data[, map.var], text = ~state, locations = ~code,
color = midwest_data[, map.var], colors = "Blues"
) %>%
colorbar(title = "Color") %>%
layout(
geo = projection
)
add_trace(
z = midwest_data[, map.var], text = ~state, locations = ~code,
color = midwest_data[, map.var], colors = "Blues"
)
scatterplot_map <- function(midwest_data, search = "",
xvar = "plotvar", yvar = "percbelowpoverty") {
output <- output %>%
filter(grepl(search, county))
plot_ly(x = output[, xvar],
y = data[, yvar]) %>%
return()
}
sctterplot_map(midwest_data, "ADAMS")
scatterplot_map <- function(midwest_data, search = "",
xvar = "plotvar", yvar = "percbelowpoverty") {
output <- output %>%
filter(grepl(search, county))
plot_ly(x = output[, xvar],
y = data[, yvar]) %>%
return()
}
output <- output %>%
filter(grepl(search, county))
plot_ly(x = output[, xvar],
y = data[, yvar])
library(dplyr)
library(ggplot2)
library(plotly)
library(stringr)
midwest_data <- data.frame(midwest)
geo_map <- function(midwest_data, map.var) {
border <- list(color = toRGB("black"), width = 3)
projection <- list(
scope = "usa",
projection = list(type = "albers usa"),
showlakes = FALSE
)
map <- plot_geo(midwest_data, locationmode = "USA-states") %>%
add_trace(
z = midwest_data[, map.var], text = ~state, locations = ~code,
color = midwest_data[, map.var], colors = "Blues"
) %>%
colorbar(title = "Color") %>%
layout(
geo = projection
)
return(map)
}
scatterplot_map <- function(midwest_data, search = "",
xvar = "plotvar", yvar = "percbelowpoverty") {
output <- output %>%
filter(grepl(search, county))
plot_ly(x = output[, xvar],
y = data[, yvar]) %>%
return()
}
scatterplot_map(midwest_data, "ADAMS")
output <- output %>%
filter(grepl(search, county))
plot_ly(x = output[, xvar],
y = data[, yvar])
output <- midwest_data %>%
filter(grepl(search, county))
plot_ly(x = output[, xvar],
y = data[, yvar])
output <- midwest_data
output <- midwest_data %>%
filter(grepl(search, county))
?grepl
shiny::runApp('Desktop/INFO/a8-shiny-ndemmel')
runApp('Desktop/INFO/a8-shiny-ndemmel')
runApp('Desktop/INFO/a8-shiny-ndemmel')
runApp('Desktop/INFO/a8-shiny-ndemmel')
runApp('Desktop/INFO/a8-shiny-ndemmel')
shiny::runApp('Desktop/INFO/a8-shiny-ndemmel')
runApp('Desktop/INFO/a8-shiny-ndemmel')
runApp('Desktop/INFO/a8-shiny-ndemmel')
shiny::runApp('Desktop/INFO/a8-shiny-ndemmel')
shiny::runApp('Desktop/INFO/a8-shiny-ndemmel')
shiny::runApp('Desktop/INFO/a8-shiny-ndemmel')
shiny::runApp('Desktop/INFO/INFO-201-Final')
library(dplyr)
library(ggplot2)
library(plotly)
library(shiny)
runApp('Desktop/INFO/INFO-201-Final')
runApp('Desktop/INFO/INFO-201-Final')
runApp('Desktop/INFO/INFO-201-Final')
interactive_scatterplot <- function(hate_crimes_minus_DC) {
plot_ly(data = hate_crimes_minus_DC, x = income_corr,
y = avg_hatecrimes_per_100k_fbi)
}
output$interactive <- renderPlotly({
interactive_scatterplot <- function(hate_crimes_minus_DC) {
plot_ly(data = hate_crimes_minus_DC, x = income_corr,
y = avg_hatecrimes_per_100k_fbi)
}
})
runApp('Desktop/INFO/INFO-201-Final')
runApp('Desktop/INFO/INFO-201-Final')
ggplot(hate_crimes_minus_DC, aes(x = income_corr,
y = avg_hatecrimes_per_100k_fbi,
color = edu_corr)) +
geom_point()
interactive_scatterplot <- function(hate_crimes_minus_DC) {
ggplot(hate_crimes_minus_DC, aes(x = income_corr,
y = avg_hatecrimes_per_100k_fbi,
color = edu_corr)) +
geom_point()
}
plot_ly(hate_crimes_minus_DC, x = income_corr,
y = avg_hatecrimes_per_100k_fbi)
plot_ly(hate_crimes_minus_DC, x = hate_crimes_minus_DC$income_corr,
y = hate_crimes_minus_DC$avg_hatecrimes_per_100k_fbi)
interactive_scatterplot <- function(hate_crimes_minus_DC) {
plot_ly(hate_crimes_minus_DC, x = hate_crimes_minus_DC$income_corr,
y = hate_crimes_minus_DC$avg_hatecrimes_per_100k_fbi)
}
View(interactive_scatterplot)
?
plot_ly(hate_crimes_minus_DC, x = hate_crimes_minus_DC$gini_index,
y = hate_crimes_minus_DC$avg_hatecrimes_per_100k_fbi) %>%
layout(title = "Education, Diversity, and Income vs Hate Crime Rate",
yaxis = list("Average Hate Crimes per 100k People"),
xaxis = list("Percent of People With a High School Degree"))
library(dplyr)
interactive_scatterplot <- function(hate_crimes_minus_DC) {
plot_ly(hate_crimes_minus_DC, x = hate_crimes_minus_DC$gini_index,
y = hate_crimes_minus_DC$avg_hatecrimes_per_100k_fbi) %>%
layout(title = "Education, Diversity, and Income vs Hate Crime Rate",
yaxis = list("Average Hate Crimes per 100k People"),
xaxis = list("Percent of People With a High School Degree"))
plot_ly(hate_crimes_minus_DC, x = hate_crimes_minus_DC$gini_index,
y = hate_crimes_minus_DC$avg_hatecrimes_per_100k_fbi) %>%
layout(title = "Education, Diversity, and Income vs Hate Crime Rate",
yaxis = list("Average Hate Crimes per 100k People"),
xaxis = list("Percent of People With a High School Degree"))
?dplyr
plot_ly(hate_crimes_minus_DC, x = hate_crimes_minus_DC$share_population_with_high_school_degree,
y = hate_crimes_minus_DC$avg_hatecrimes_per_100k_fbi)
library(ggplot2)
library(dplyr)
library(plotly)
hate_crimes <- read.csv("hate_crimes.csv", stringsAsFactors = FALSE)
hate_crimes_minus_DC <- hate_crimes[-9, ]
setwd("~/Desktop/INFO/INFO-201-Final")
library(dplyr)
# hate crimes
hate_crimes <- read.csv("hate_crimes.csv", stringsAsFactors = FALSE)
hate_crimes_minus_DC <- hate_crimes[-9, ]
# affect of income inequality on rate of hate crimes
hate_crimes_minus_DC <- mutate(hate_crimes_minus_DC, income_corr = gini_index
/ avg_hatecrimes_per_100k_fbi)
# affect of education on rate of hate crimes
hate_crimes_minus_DC <- mutate(hate_crimes_minus_DC,
edu_corr = share_population_with_high_school_degree /
avg_hatecrimes_per_100k_fbi)
# affect of racial diversity on rate of hate crimes
hate_crimes_minus_DC <- mutate(hate_crimes_minus_DC, div_corr = share_non_white
/ avg_hatecrimes_per_100k_fbi)
# 2016 Presidential Election
plot_ly(hate_crimes_minus_DC, x = hate_crimes_minus_DC$share_population_with_high_school_degree,
y = hate_crimes_minus_DC$avg_hatecrimes_per_100k_fbi)
plot_ly(hate_crimes_minus_DC, x = hate_crimes_minus_DC$income_corr,
y = hate_crimes_minus_DC$avg_hatecrimes_per_100k_fbi) %>%
layout(title = "Education, Diversity, and Income vs Hate Crime Rate",
yaxis = list("Average Hate Crimes per 100k People"),
xaxis = list("Percent of People With a High School Degree"))
interactive_scatterplot <- function(hate_crimes_minus_DC) {
plot_ly(hate_crimes_minus_DC, x = hate_crimes_minus_DC$income_corr,
y = hate_crimes_minus_DC$avg_hatecrimes_per_100k_fbi) %>%
layout(title = "Education, Diversity, and Income vs Hate Crime Rate",
yaxis = list("Average Hate Crimes per 100k People"),
xaxis = list("Percent of People With a High School Degree"))
}
View(interactive_scatterplot)
shiny::runApp()
runApp()
runApp()
runApp()
View(hate_crimes_minus_DC)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/INFO/a8-shiny-ndemmel')
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Documents/University of Washington/INFO 201/a8-shiny-msshriner')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
styler:::style_active_file()
runApp()
setwd("~/Documents/University of Washington/INFO 201/INFO-201-Final")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(hate_crimes)
View(worst_state_frame)
View(hate_crimes)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Documents/University of Washington/INFO 201/a8-shiny-msshriner')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
styler:::style_active_file()
lintr:::addin_lint()
runApp()
runApp()
styler:::style_active_file()
names(hate_crimes_minus_DC)[names(hate_crimes_minus_DC) == "income_corr"] <-
"Income Inequality"
# Adds column with state abbreviations for interactive map
crimes_states <- mutate(hate_crimes_minus_DC, locations = c(
"AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE",
"FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME",
"MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM",
"NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX",
"UT", "VT", "VA", "WA", "WV", "WI", "WY"
))
runApp()
styler:::style_active_file()
runApp()
runApp()
runApp()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
runApp()
lintr:::addin_lint()
lintr:::addin_lint()
runApp()
runApp()
runApp()
runApp()
runApp()
styler:::style_active_file()
styler:::style_active_file()
runApp()
runApp()
runApp()
runApp()
styler:::style_active_file()
runApp('~/Documents/University of Washington/INFO 201/INFO-201-Final copy/Hate_Crimes')
runApp('~/Documents/University of Washington/INFO 201/INFO-201-Final copy/Hate_Crimes')
# List of states
states <- list("Alabama", "Alaska", "Arizona", "Arkansas", "California",
"Colorado", "Connecticut", "Delaware",
"District of Columbia", "Florida", "Georgia", "Hawaii",
"Idaho", "Illinois", "Indiana", "Iowa", "Kansas",
"Kentucky", "Louisiana", "Maine", "Maryland",
"Massachusetts", "Michigan", "Minnesota", "Mississippi",
"Missouri", "Montana", "Nebraska", "Nevada",
"New Hampshire", "New Jersey", "New Mexico", "New York",
"North Carolina", "North Dakota", "Ohio", "Oklahoma",
"Oregon", "Pennsylvania", "Rhode Island",
"South Carolina", "South Dakota", "Tennessee", "Texas",
"Utah", "Vermont", "Virginia", "Washington",
"West Virginia", "Wisconsin", "Wyoming")
runApp()
runApp()
runApp('~/Documents/University of Washington/INFO 201/INFO-201-Final copy/Hate_Crimes')
runApp()
runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='mshriner', token='4ED8F2401F7523C8F41AFE0FB3FA19A3', secret='NMf3A7Wvx4cCZxEkG2C2FmH9pXFf8YHUq9slFNNf')
runApp()
# HAHA
hate_crimes_minus_dc <- hate_crimes[-9, ]
worst_state_frame <- subset(hate_crimes_minus_dc, state == "Massachusetts")
runApp()
runApp()
styler:::style_active_file()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
styler:::style_active_file()
lintr:::addin_lint()
runApp()
runApp()
runApp()
runApp()
runApp()
styler:::style_active_file()
lintr:::addin_lint()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
